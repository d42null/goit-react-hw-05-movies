{"version":3,"file":"static/js/387.a1da3bc0.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/themoviedborg-api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const CastList = styled.ul`\n  margin-top: 8px;\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 8px;\n`;\nexport const CastCard = styled.li`\n  background-color: #777;\n  color: #eee;\n  flex-basis: calc((100% - 5 * 16px) / 6);\n  display: flex;\n  border: solid 2px #eee;\n  box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.75);\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/themoviedborg-api';\nimport { CastCard, CastList } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetch = async id => {\n      setLoading(true);\n      try {\n        const data = await getMovieCast(id);\n        setCast(data.cast);\n        if (data.cast.length === 0) setError({ message: 'No Results' });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>{error.message}</p>}\n      <CastList>\n        {cast.map(x => (\n          <CastCard key={x.name}>\n            {x.profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${x.profile_path}`}\n                alt={`${x.name}`}\n                width=\"80\"\n              />\n            )}\n            <div>\n              <h5>{x.name}</h5>\n              {x.character && <h6>{`${x.character}`}</h6>}\n            </div>\n          </CastCard>\n        ))}\n      </CastList>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers = {\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOWJmMDkxZTAyMWNkZmJjMWYxOTY3NWM0Y2E5ZDRmOSIsInN1YiI6IjY1Njg5MGY1ZDEzMzI0MDBmZWU4MzQ0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nK9GQ_7GBvsy7RiLUSdn8KKUHJGeDfbf8eLgJYMnVB0',\n};\nconst searchParams = new URLSearchParams({\n   language: 'en-US',\n});\nexport const getTrending = async () => {\n  const resp = await axios.get(`trending/movie/day?${searchParams}`);\n  return await resp.data;\n};\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?${searchParams}`);\n  return await resp.data;\n};\nexport const getMoviesBySearchQ = async searchQ => {\n  searchParams.set('query', searchQ);\n  const resp = await axios.get(`search/movie?${searchParams}`);\n  return await resp.data;\n};\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?${searchParams}`);\n  return await resp.data;\n};\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?${searchParams}`);\n  return await resp.data;\n};\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastCard","_templateObject2","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","getMovieCast","sent","length","message","t0","finish","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","map","x","profile_path","src","concat","alt","name","width","character","axios","Authorization","searchParams","URLSearchParams","language","getTrending","resp","abrupt","getMovieDetails","_ref2","_callee2","_context2","getMoviesBySearchQ","_ref3","_callee3","searchQ","_context3","set","_x2","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}