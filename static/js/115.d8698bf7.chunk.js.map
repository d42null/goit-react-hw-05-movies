{"version":3,"file":"static/js/115.d8698bf7.chunk.js","mappings":"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","sources":["components/Movies/Movies.jsx","services/themoviedborg-api.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearchQ } from 'services/themoviedborg-api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n  useEffect(() => {\n    if (!query) return;\n    const fetch = async query => {\n      setLoading(true);\n      try {\n        const data = await getMoviesBySearchQ(query);\n        setMovies(data.results);\n        if (data.results.length === 0) setError({ message: 'No Results' });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch(query);\n  }, [query]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams(\n      e.target.query.value.trim() ? { query: e.target.query.value.trim() } : {}\n    );\n    setMovies([]);\n    setError(null);\n    e.target.reset();\n  };\n  return (\n    <main>\n      <form onSubmit={onSubmit}>\n        <input name=\"query\" type=\"text\" autoFocus />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}\n      {error && <p>{error.message}</p>}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(x => (\n            <li key={x.id}>\n              <Link to={`${x.id}`} state={{ from: location }}>\n                {`${x.title}(${x.release_date})`}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers = {\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOWJmMDkxZTAyMWNkZmJjMWYxOTY3NWM0Y2E5ZDRmOSIsInN1YiI6IjY1Njg5MGY1ZDEzMzI0MDBmZWU4MzQ0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nK9GQ_7GBvsy7RiLUSdn8KKUHJGeDfbf8eLgJYMnVB0',\n};\nconst searchParams = new URLSearchParams({\n   language: 'en-US',\n});\nexport const getTrending = async () => {\n  const resp = await axios.get(`trending/movie/day?${searchParams}`);\n  return await resp.data;\n};\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?${searchParams}`);\n  return await resp.data;\n};\nexport const getMoviesBySearchQ = async searchQ => {\n  searchParams.set('query', searchQ);\n  const resp = await axios.get(`search/movie?${searchParams}`);\n  return await resp.data;\n};\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?${searchParams}`);\n  return await resp.data;\n};\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?${searchParams}`);\n  return await resp.data;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMoviesBySearchQ","sent","results","length","message","t0","finish","stop","_x","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","target","value","trim","reset","_jsx","name","type","autoFocus","Loader","map","x","Link","to","concat","id","state","from","title","release_date","axios","Authorization","URLSearchParams","language","getTrending","resp","abrupt","getMovieDetails","_ref2","_callee2","_context2","_ref3","_callee3","searchQ","_context3","set","_x2","getMovieCast","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}